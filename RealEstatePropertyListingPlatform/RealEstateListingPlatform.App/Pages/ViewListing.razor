@page "/viewlisting/{ListingId}"
@using RealEstateListingPlatform.App.Services
@using RealEstateListingPlatform.App.ViewModels
@using RealEstateListingPlatform.App.Contracts
@using RealEstateListingPlatform.App.ViewModels.UserModels
<head>
    <link href="css/app.css"/>
    <title>ViewListing</title>
</head>

@if (Listing != null)
{
    <div class="middle">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="aura">
                        <HxCarousel Indicators="true" Controls="true">
                            @foreach (var photo in Listing.Photos!)
                            {
                                <HxCarouselItem Active="photo == Listing.Photos!.FirstOrDefault()">
                                    <div style="width: inherit; height: 400px; background-image: url('@photo'); background-size: cover; background-position: center;"> </div>
                                </HxCarouselItem>
                            }
                        </HxCarousel>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        @* For Owner Details *@
                        <div class="card-header">
                            <h4 class="card-title">@UserInfo!.Name</h4>
                        </div>
                        <div class="card-body">
                            <p class="card-text">✉️@UserInfo.Email
                            
                            </p>

                            <p class="card-text">📞@UserInfo.PhoneNumber</p>
                            @if (showContactDialog)
                            {
                                <div class="modal" tabindex="-1" role="dialog" style="display: block;">
                                    <div class="modal-dialog" role="document">
                                
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Contact Owner</h5>
                                                <button type="button" class="close" @onclick="CloseContactDialog" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="@GetAlertClass() mb-3 ms-2" style="display: @(string.IsNullOrWhiteSpace(Message) ? "none" : "block");">
                                                    <div class="d-flex align-items-center">
                                                        <div class="me-2">
                                                            <svg id="checkmark" xmlns="http://www.w3.org/2000/svg" style="width: 24px; height: 24px; transform-origin: center; transition: transform 0.3s ease-in-out;" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                                                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                                                                <polyline points="22 4 12 14.01 9 11.01"></polyline>
                                                            </svg>
                                                        </div>
                                                        <div>@Message</div>
                                                    </div>
                                                </div>
                                                <label for="emailInput">✉️Your email:</label>
                                                <input type="email" class="form-control" id="emailInput" @bind="@emailInput" />

                                                <label for="messageInput">🗨️Message:</label>
                                                <textarea class="form-control" id="messageInput" rows="3" @bind="@messageInput"></textarea>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary cancel" @onclick="CloseContactDialog">Close</button>
                                                <button type="button" class="btn btn-primary send" @onclick="SendMail">Send</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <button class="button-contact" @onclick="ShowContactDialog">Contact</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="card my-4">
                <div class="card-header">
                    <h4 class="card-title d-flex justify-content-between">
                        <span>@Listing.Title</span>
                        <span>
                            <div>
                                @Listing.Price!.Value <span style="color: green">@Listing.Price.Currency</span>
                            </div>
                            <h6>
                                @if (Listing.Negotiable)
                                {
                                    <HxAlert Color="ThemeColor.Success"> Negotiable </HxAlert>
                                }
                                else
                                {
                                    <HxAlert Color="ThemeColor.Danger"> Non-Negotiable </HxAlert>
                                }
                            </h6>
                        </span>
                    </h4>
                </div>
                <div class="card-body">
                    <p class="card-text">@Listing.Description</p>
                    <p class="card-text">@Listing.DateCreated</p>
                </div>
            </div>
            <div class="card my-3">
                <div class="card-header">
                    <h4 class="card-title">Property Info</h4>
                </div>
                <div class="card-body">
                    <div class="d-grid">
                        <div class="row">
                            <div class="col-md-6">
                                <HxListGroup>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Type..... </span>
                                            <span>@Property!.PropertyType</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Square feet..... </span>
                                            <span>@Property!.SquareFeet</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Number of floors..... </span>
                                            <span>@Property!.NumberOfFloors</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Number of rooms..... </span>
                                            <span>@Property!.NumberOfRooms</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Number of bathrooms..... </span>
                                            <span>@Property!.NumberOfBathrooms</span>
                                        </div>
                                    </HxListGroupItem>
                                </HxListGroup>
                            </div>
                            <div class="col-md-6">
                                <HxListGroup>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Floor..... </span>
                                            <span>@Property!.Floor</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Street Name..... </span>
                                            <span>@Property!.StreetName</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Postal Code..... </span>
                                            <span>@Property!.PostalCode</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>City/Region..... </span>
                                            <span>@Property!.City/@Property!.Region</span>
                                        </div>
                                    </HxListGroupItem>
                                    <HxListGroupItem>
                                        <div class="d-flex justify-content-between">
                                            <span>Country..... </span>
                                            <span>@Property!.Country</span>
                                        </div>
                                    </HxListGroupItem>
                                </HxListGroup>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}
else
{
    <p>
        <HxSpinner Color="ThemeColor.Primary"/>
    </p>
}

@code {
    [Parameter] public string? ListingId { get; set; }

    [Inject] public required IListingDataService ListingDataService { get; set; }

    [Inject] public required ISendMailService SendMailService { get; set; }

    [Inject] public required IPropertyDataService PropertyDataService { get; set; }
    [Inject] public required IUserService UserService { get; set; }

    private UserInfoViewModel? UserInfo { get; set; }

    private PropertyViewModelByUser? Property { get; set; }

    private ListingViewModel? Listing { get; set; }

    private string emailInput = "";
    private string messageInput = "";

    public string Message { get; set; }

    private bool showContactDialog = false;

    private void ShowContactDialog()
    {
        showContactDialog = true;
    }

    private void CloseContactDialog()
    {
        showContactDialog = false;
    }

    private async Task SendMail()
    {
        var response = await UserService.GetInfo(Listing.ListingCreatorId);
        if (response.IsSuccess)
        {
            UserInfo = response.Data;
        }

        string body = "Someone is interested in your property. Please contact him/her replying to this email or at " + UserInfo!.PhoneNumber + ".\n Here is the message: " + messageInput;

        Console.WriteLine(emailInput);
        var mail = new SendMailViewModel
            {
                To = UserInfo!.Email,
                ReplyTo = emailInput,
                Subject = "Someone is interested in your property " + Listing.Title,
                Body = body
            };

        Console.WriteLine(mail);
        var result = await SendMailService.SendMailAsync(mail);
        if (result.isSuccess)
        {
            Message = "Mail sent successfully";
        }
        else
        {
            Message = "Mail not sent";
        }
    }

    private string GetAlertClass()
    {
        if (string.IsNullOrWhiteSpace(Message))
        {
            return "alert alert-info"; // sau o altă clasă pentru alerte informative
        }

        return Message.StartsWith("Mail sent successfully") ? "alert alert-success" : "alert alert-danger";
    }

    private async Task LoadPage()
    {
        Listing = await ListingDataService.GetListingByIdAsync(Guid.Parse(ListingId!));
        Property = await PropertyDataService.GetBasicInfoPropertyByIdAsync(Guid.Parse(Listing.PropertyId));
        var response = await UserService.GetInfo(Listing.ListingCreatorId);
        if (response.IsSuccess)
        {
            UserInfo = response.Data;
        }
    }

    protected override Task OnInitializedAsync()
    {
        return LoadPage();
    }

}