@page "/login"
@using RealEstateListingPlatform.App.Auth
@using RealEstateListingPlatform.App.Contracts
@using RealEstateListingPlatform.App.ViewModels
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider
@inject ITokenService TokenService
<head>

<link href="css/app.css" rel="stylesheet" />
<link href="css/login.css" rel="stylesheet" />

<style>
        body {
            background: linear-gradient(to right, #6a11cb 0%, #2575fc 100%) !important;
        }

</style>
</head>
<div class="container">
    <div class="row justify-content-center">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6"> <!-- Aici adaugi imaginea -->
                        <img src="/background.png" alt="Descriere imagine" class="img-fluid"  />
                    </div>
                    <div class="col-md-6">
                        <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
                        <DataAnnotationsValidator />

                        <div class="form-group">
                            <h1 class="h1-login">Sign in</h1>
                            <br />
                                <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.Username" autofocus placeholder="👤 Username" />
                                <ValidationMessage For="@(() => loginRequest.Username)" class="custom-validation-message" />
                        </div>

                        <div class="form-group">
                                <InputText type="password" id="inputPassword" class="form-control" placeholder="🔒 Password" @bind-Value="loginRequest.Password" />
                                <ValidationMessage For="@(() => loginRequest.Password)" class="custom-validation-message" />
                        </div>

                        <button class="login-button" type="submit" onclick="OnClickHandler">LOGIN</button>
                        <span class="forgot-password" type="submit" @onclick="NavigateToForgotPassword">Forgot password?</span>

                        <label class="text-danger">@error</label>
                        <NavLink href="register">
                                <h6 class="font-weight-normal text-center">Create account</h6>
                        </NavLink>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    LoginViewModel loginRequest { get; set; } = new LoginViewModel();
    string error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var token = await TokenService.GetTokenAsync();
        if (token != null)
        {
            navigationManager.NavigateTo("/");
        }
    }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginRequest);
            navigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            error = "Invalid credentials";
        }
    }

void NavigateToForgotPassword()
    {
        navigationManager.NavigateTo("/changepassword");
    }
}
