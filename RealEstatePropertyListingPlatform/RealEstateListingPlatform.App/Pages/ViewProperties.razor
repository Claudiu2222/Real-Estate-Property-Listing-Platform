@page "/viewproperties"
@using RealEstateListingPlatform.App.Contracts
@using RealEstateListingPlatform.App.ViewModels
<head>
    <link href="css/app.css" rel="stylesheet" />
    <link href="css/viewproperties.css" rel="stylesheet" />
</head>
<div class="title-container">
    <h3 class="mb-4 text-center">🏘️Your Properties</h3>
</div>
<div class="container">
    <div class="row justify-content-center">
                        @if(Properties != null)
                        {
                            count = 1;
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Nr. crt</th>
                                        <th>Property type</th>
                                        <th>Address</th>
                                        <th>City</th>
                                        <th>Square feet</th>
                                        <th>Buttons</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var property in Properties)
                                    {
                                        <tr>
                                            <td>@count</td>
                                            <td>@property.PropertyType</td>
                                            <td>@property.StreetName</td>
                                            <td>@property.City</td>
                                            <td>@property.SquareFeet</td>
                                            <td>
                                                <button @onclick="()=>AddListing(property)" class="button-add-listing">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                                    </svg>
                                                </button>
                                                    <button @onclick="()=>EditProperty(property)" class="button-edit">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.553 21.281l-1.834-1.833" />
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M18.719 16.594l-1.833-1.833" />
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6.5l-8 8" />
                                                    </svg>
                                                </button>

                                                <button @onclick="()=>DeleteProperty(property)" class="button-delete">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                    </svg>
                                                </button>
                                                @*Add Listing button*@
                                            </td>
                                        </tr>
                                        count++;
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p>You don't have any properties yet.</p>
                        }
    </div>
</div>

@code {
    [Inject]
    public IPropertyDataService PropertyDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public List<PropertyViewModelByUser> Properties { get; set; }

    public string Message { get; set; }

    public int count { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try{
            Properties = (await PropertyDataService.GetAllPropertiesByOwnerAsync()).ToList();
        }
        catch(Exception ex)
        {
            Message = ex.Message;
        }


    }
}

@functions {
    private void EditProperty(PropertyViewModelByUser property)
    {
        NavigationManager.NavigateTo($"/editproperty/{property.PropertyId}");
    }

    private async void DeleteProperty(PropertyViewModelByUser property)
    {
        RefreshPage();
        await PropertyDataService.DeletePropertyAsync(property.PropertyId);
    }

    private void RefreshPage()
    {
        Console.WriteLine("Refresh page");
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private void AddListing(PropertyViewModelByUser property)
    {
        NavigationManager.NavigateTo($"/addlisting/{property.PropertyId}");
    }

}
